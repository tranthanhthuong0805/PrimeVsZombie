// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace PrimeVsZombieDB {
    using PrimeVsZombieDB;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    
    
    public partial class PrimeViewModelBase : uFrame.MVVM.ViewModels.ViewModel {
        
        private P<TargetViewModel> _TargetProperty;
        
        private Signal<MoveDownCommand> _MoveDown;
        
        private Signal<MoveRightCommand> _MoveRight;
        
        private Signal<MoveUpCommand> _MoveUp;
        
        private Signal<MoveStopCommand> _MoveStop;
        
        private Signal<MoveLeftCommand> _MoveLeft;
        
        public PrimeViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual P<TargetViewModel> TargetProperty {
            get {
                return _TargetProperty;
            }
            set {
                _TargetProperty = value;
            }
        }
        
        public virtual TargetViewModel Target {
            get {
                return TargetProperty.Value;
            }
            set {
                TargetProperty.Value = value;
            }
        }
        
        public virtual Signal<MoveDownCommand> MoveDown {
            get {
                return _MoveDown;
            }
            set {
                _MoveDown = value;
            }
        }
        
        public virtual Signal<MoveRightCommand> MoveRight {
            get {
                return _MoveRight;
            }
            set {
                _MoveRight = value;
            }
        }
        
        public virtual Signal<MoveUpCommand> MoveUp {
            get {
                return _MoveUp;
            }
            set {
                _MoveUp = value;
            }
        }
        
        public virtual Signal<MoveStopCommand> MoveStop {
            get {
                return _MoveStop;
            }
            set {
                _MoveStop = value;
            }
        }
        
        public virtual Signal<MoveLeftCommand> MoveLeft {
            get {
                return _MoveLeft;
            }
            set {
                _MoveLeft = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            this.MoveDown = new Signal<MoveDownCommand>(this);
            this.MoveRight = new Signal<MoveRightCommand>(this);
            this.MoveUp = new Signal<MoveUpCommand>(this);
            this.MoveStop = new Signal<MoveStopCommand>(this);
            this.MoveLeft = new Signal<MoveLeftCommand>(this);
            _TargetProperty = new P<TargetViewModel>(this, "Target");
        }
        
        public virtual void ExecuteMoveDown() {
            this.MoveDown.OnNext(new MoveDownCommand());
        }
        
        public virtual void ExecuteMoveRight() {
            this.MoveRight.OnNext(new MoveRightCommand());
        }
        
        public virtual void ExecuteMoveUp() {
            this.MoveUp.OnNext(new MoveUpCommand());
        }
        
        public virtual void ExecuteMoveStop() {
            this.MoveStop.OnNext(new MoveStopCommand());
        }
        
        public virtual void ExecuteMoveLeft() {
            this.MoveLeft.OnNext(new MoveLeftCommand());
        }
        
        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Read(stream);
            		if (stream.DeepSerialize) this.Target = stream.DeserializeObject<TargetViewModel>("Target");;
        }
        
        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Write(stream);
            if (stream.DeepSerialize) stream.SerializeObject("Target", this.Target);;
        }
        
        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {
            base.FillCommands(list);
            list.Add(new ViewModelCommandInfo("MoveDown", MoveDown) { ParameterType = typeof(void) });
            list.Add(new ViewModelCommandInfo("MoveRight", MoveRight) { ParameterType = typeof(void) });
            list.Add(new ViewModelCommandInfo("MoveUp", MoveUp) { ParameterType = typeof(void) });
            list.Add(new ViewModelCommandInfo("MoveStop", MoveStop) { ParameterType = typeof(void) });
            list.Add(new ViewModelCommandInfo("MoveLeft", MoveLeft) { ParameterType = typeof(void) });
        }
        
        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_TargetProperty, true, false, false, false));
        }
    }
    
    public partial class PrimeViewModel {
        
        public PrimeViewModel(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
