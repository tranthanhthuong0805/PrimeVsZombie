// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace PrimeVsZombieDB {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public class TargetControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.ViewModels.IViewModelManager _TargetViewModelManager;
        
        private PrimeViewModel _Prime;
        
        private GamePlayViewModel _GamePlay;
        
        [uFrame.IOC.InjectAttribute("Target")]
        public uFrame.MVVM.ViewModels.IViewModelManager TargetViewModelManager {
            get {
                return _TargetViewModelManager;
            }
            set {
                _TargetViewModelManager = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute("Prime")]
        public PrimeViewModel Prime {
            get {
                return _Prime;
            }
            set {
                _Prime = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute("GamePlay")]
        public GamePlayViewModel GamePlay {
            get {
                return _GamePlay;
            }
            set {
                _GamePlay = value;
            }
        }
        
        public IEnumerable<TargetViewModel> TargetViewModels {
            get {
                return TargetViewModelManager.OfType<TargetViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeTarget(((TargetViewModel)(viewModel)));
        }
        
        public virtual TargetViewModel CreateTarget() {
            return ((TargetViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {
            return new TargetViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeTarget(TargetViewModel viewModel) {
            // This is called when a TargetViewModel is created
            TargetViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            TargetViewModelManager.Remove(viewModel);
        }
    }
}
