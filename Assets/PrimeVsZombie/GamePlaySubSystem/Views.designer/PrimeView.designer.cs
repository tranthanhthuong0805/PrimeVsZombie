// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace PrimeVsZombieDB {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.Services;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class PrimeViewBase : uFrame.MVVM.Views.ViewBase {
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public uFrame.MVVM.Views.ViewBase _Target;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("MoveDown")]
        [UnityEngine.HideInInspector()]
        public bool _BindMoveDown = true;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("MoveLeft")]
        [UnityEngine.HideInInspector()]
        public bool _BindMoveLeft = true;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("MoveUp")]
        [UnityEngine.HideInInspector()]
        public bool _BindMoveUp = true;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("MoveRight")]
        [UnityEngine.HideInInspector()]
        public bool _BindMoveRight = true;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("MoveStop")]
        [UnityEngine.HideInInspector()]
        public bool _BindMoveStop = true;
        
        public override string DefaultIdentifier {
            get {
                return "Prime";
            }
        }
        
        public override System.Type ViewModelType {
            get {
                return typeof(PrimeViewModel);
            }
        }
        
        public PrimeViewModel Prime {
            get {
                return (PrimeViewModel)ViewModelObject;
            }
        }
        
        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {
            base.InitializeViewModel(model);
            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.
            // var vm = model as PrimeViewModel;
            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.
            var primeview = ((PrimeViewModel)model);
            primeview.Target = this._Target == null ? null :  ViewService.FetchViewModel(this._Target) as TargetViewModel;
        }
        
        public override void Bind() {
            base.Bind();
            // Use this.Prime to access the viewmodel.
            // Use this method to subscribe to the view-model.
            // Any designer bindings are created in the base implementation.
            if (_BindMoveDown) {
                this.BindCommandExecuted(this.Prime.MoveDown, this.MoveDownExecuted);
            }
            if (_BindMoveLeft) {
                this.BindCommandExecuted(this.Prime.MoveLeft, this.MoveLeftExecuted);
            }
            if (_BindMoveUp) {
                this.BindCommandExecuted(this.Prime.MoveUp, this.MoveUpExecuted);
            }
            if (_BindMoveRight) {
                this.BindCommandExecuted(this.Prime.MoveRight, this.MoveRightExecuted);
            }
            if (_BindMoveStop) {
                this.BindCommandExecuted(this.Prime.MoveStop, this.MoveStopExecuted);
            }
        }
        
        public virtual void MoveDownExecuted(MoveDownCommand command) {
        }
        
        public virtual void MoveLeftExecuted(MoveLeftCommand command) {
        }
        
        public virtual void MoveUpExecuted(MoveUpCommand command) {
        }
        
        public virtual void MoveRightExecuted(MoveRightCommand command) {
        }
        
        public virtual void MoveStopExecuted(MoveStopCommand command) {
        }
        
        public virtual void ExecuteMoveDown() {
            Prime.MoveDown.OnNext(new MoveDownCommand() { Sender = Prime });
        }
        
        public virtual void ExecuteMoveRight() {
            Prime.MoveRight.OnNext(new MoveRightCommand() { Sender = Prime });
        }
        
        public virtual void ExecuteMoveUp() {
            Prime.MoveUp.OnNext(new MoveUpCommand() { Sender = Prime });
        }
        
        public virtual void ExecuteMoveStop() {
            Prime.MoveStop.OnNext(new MoveStopCommand() { Sender = Prime });
        }
        
        public virtual void ExecuteMoveLeft() {
            Prime.MoveLeft.OnNext(new MoveLeftCommand() { Sender = Prime });
        }
        
        public virtual void ExecuteMoveDown(MoveDownCommand command) {
            command.Sender = Prime;
            Prime.MoveDown.OnNext(command);
        }
        
        public virtual void ExecuteMoveRight(MoveRightCommand command) {
            command.Sender = Prime;
            Prime.MoveRight.OnNext(command);
        }
        
        public virtual void ExecuteMoveUp(MoveUpCommand command) {
            command.Sender = Prime;
            Prime.MoveUp.OnNext(command);
        }
        
        public virtual void ExecuteMoveStop(MoveStopCommand command) {
            command.Sender = Prime;
            Prime.MoveStop.OnNext(command);
        }
        
        public virtual void ExecuteMoveLeft(MoveLeftCommand command) {
            command.Sender = Prime;
            Prime.MoveLeft.OnNext(command);
        }
    }
}
